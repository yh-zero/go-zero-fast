// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: sys.proto

package token

import (
	"context"

	"go-zero-fast/service/sys/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IDReq        = pb.IDReq
	TokenInfo    = pb.TokenInfo
	TokenInfoReq = pb.TokenInfoReq
	TokenInfoRes = pb.TokenInfoRes
	UserInfo     = pb.UserInfo
	UserInfoRes  = pb.UserInfoRes
	UsernameReq  = pb.UsernameReq
	UsernameRes  = pb.UsernameRes

	Token interface {
		// 生成Token
		CreateToken(ctx context.Context, in *TokenInfoReq, opts ...grpc.CallOption) (*TokenInfoRes, error)
	}

	defaultToken struct {
		cli zrpc.Client
	}
)

func NewToken(cli zrpc.Client) Token {
	return &defaultToken{
		cli: cli,
	}
}

// 生成Token
func (m *defaultToken) CreateToken(ctx context.Context, in *TokenInfoReq, opts ...grpc.CallOption) (*TokenInfoRes, error) {
	client := pb.NewTokenClient(m.cli.Conn())
	return client.CreateToken(ctx, in, opts...)
}
