syntax = "proto3";

option go_package = "./pb";

package pb;

message IDReq {
  uint64 id = 1;
}

message IDsReq {
  repeated uint64 ids = 1;
}

message NoDataResponse {}

message PageInfo {
  uint64 pageNo = 1;
  uint64 pageSize = 2;
  uint64 cursor = 3;
}

message Model {
  uint64 id = 1;
  uint64 createdAt = 2;
  uint64 updatedAt = 3;
  uint64 deletedAt = 4;
}


message UsernameReq {
  string username = 1;
}

message UserInfo {
//   uint64 id = 1; //  可以设置不能为空
    uint64 id = 1;
    uint64 status = 2;
    string username = 3;
    string password = 4;
    string nickname = 5;
    string description = 6;
    string homePath = 7;
    repeated uint64 roleIds = 8;
    string mobile = 9;
    string email = 10;
    string avatar = 11;
    uint64 departmentId = 12;
    repeated uint64 positionIds = 13;
    repeated string roleCodes = 14;
    repeated string roleName = 15;
    string departmentName = 16;

    uint64 createdAt = 17;
    uint64 updatedAt = 18;
}

message UsernameRes {
  UserInfo userInfo = 1;
}

message TokenInfo {
   uint64 id = 1;
   uint64 status = 2;
   uint64 userId = 3;
   string username = 4;
   string token = 5;
   string source = 6;
   uint64 expiredAt = 7;
   uint64 createdAt = 8;
   uint64 updatedAt = 9;
}

message TokenInfoReq {
  TokenInfo tokenInfo = 1;
}

message TokenInfoRes {
  uint64 id = 1;
  string token = 2;
}

message UserInfoRes {
  UserInfo userInfo = 1;
}

message MenuInfo {
   uint64 id = 1;
   uint64 level = 2;
   uint64 parentId = 3;
   string path = 4;
   string name = 5;
   string redirect = 6;
   string component = 7;
   uint64 sort = 8;
   bool disabled = 9;
   uint64 menuType = 10;
   string serviceName = 11;
   string permission = 12;
   Meta meta = 13;

   uint64 createdAt = 14;
   uint64 updatedAt = 15;
   uint64 deletedAt = 16;
}

message Meta {
   string title = 1;
   string icon = 2;
   bool hideMenu = 3;
   bool hideBreadcrumb = 4;
   bool ignoreKeepAlive = 5;
   bool hideTab = 6;
   string frameSrc = 7;
   bool carryParam = 8;
   bool hideChildrenInMenu = 9;
   bool affix = 10;
   uint64 dynamicLevel = 11;
   string realPath = 12;
}

message MenuInfoList {
  uint64 total = 1;
  repeated MenuInfo menuInfo = 2;
}

message RoleInfo {
  Model model = 1;
  uint64 status = 2;
  string name = 3;
  string code = 4;
  string remark = 5;
  uint64 sort = 6;
}

message RoleListReq {
  PageInfo pageInfo = 1;
  string name = 2;
  string code = 3;
  uint64 Id = 4;
}
message RoleListRes {
  uint64 total = 1;
  uint64 cursor = 2;
  repeated RoleInfo roleInfo = 3;
}



//=============================== 隔离结构体 ===========================

service User {
  // 根据用户名获取用户详情
  rpc getUserByUsername (UsernameReq) returns (UsernameRes);

  //获取用户详细信息
  rpc getUserInfoById (IDReq) returns (UserInfoRes);
}

service Token {
  // 生成Token
  rpc createToken (TokenInfoReq) returns (TokenInfoRes);
}

service Menu {
  // 根据角色id 获取菜单 -- 目前系统用这个 可以方便用户切换角色获取不一样的菜单
  rpc getMenuListByRoleId (IDReq) returns (MenuInfoList);

  // 根据角色ids 获取菜单
  //  rpc getMenuListByRoleIds (IDSReq) returns (MenuInfoList);
}

service Role {

  // 获取角色列表
  rpc getRoleList (RoleListReq) returns (RoleListRes);
  // 创建新角色
  rpc createRole (RoleInfo) returns (NoDataResponse);
  // 删除角色信息
  rpc deleteRole (IDsReq) returns (NoDataResponse);
  // 更新角色
  rpc updateRole (RoleInfo) returns (NoDataResponse);
  // 通过ID获取角色
  rpc getRoleById (IDReq) returns (NoDataResponse);



}